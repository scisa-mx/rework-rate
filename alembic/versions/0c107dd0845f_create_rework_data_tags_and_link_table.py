"""create rework_data, tags and link table

Revision ID: 0c107dd0845f
Revises: 
Create Date: 2025-06-23 15:52:25.893300

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = '0c107dd0845f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rework_data_tags',
    sa.Column('rework_data_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['rework_data_id'], ['rework_data.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('rework_data_id', 'tag_id')
    )
    op.alter_column('rework_data', 'createdAtDate',
               existing_type=sa.DATETIME(),
               type_=sa.Date(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rework_data', 'createdAtDate',
               existing_type=sa.Date(),
               type_=sa.DATETIME(),
               existing_nullable=True)
    op.drop_table('rework_data_tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
